name: Deployment Pipeline

# Xác định sự kiện trigger cho pipiline
# trường hợp này là branch main
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

#Định nghĩa các jobs cần thực hiện
jobs:
  #flow deploy
  deloy-to-dev:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    #Các bước
    steps:
      #Đặt tên cho bước
      - name: Checkout code
      - uses: actions/checkout@v4

      - name: Set up base Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: "20.10"

      # - name: Login to Docker Hub
      # - uses: docker/login-action@v3
      #     with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Short SHA as an environment variable
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}">>$GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # - name: Build and push Docker image
      #   run: |
      # docker build --platform linux/amd64 -t ${{secrets.DOCKER_IMAGE_NAME}}:{{env.IMAGE_TAG}} .
      # doceker tag ${{secrets.DOCKER_IMAGE_NAME}}:${{env.IMAGE_TAG}} ${{secrets:DOCKER_ID}}/${{secrets.DOCKER_IMAGE_NAME}}:{{env.IMAGE_TAG}}
      # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      # docker push ${{secrets:DOCKER_ID}}/${{secrets.DOCKER_IMAGE_NAME}}:{{env.IMAGE_TAG}}

      - name: Copy config and docker-compose to sever
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "deploy/frontend/"
          target: "/root/deploy/frontend"

      # - name: SSH into server and deploy
      #   uses: appleboy/ssh-action@v0.1.3
      #   env:
      #     DOCKER_ID: ${{ secrets.DOCKER_ID }}
      #     IMAGE_TAG: ${{ env.IMAGE_TAG }}
      #     DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     envs: DOCKER_ID,DOCKER_IMAGE_NAME,IMAGE_TAG
      #     script_stop: true
      #     script: |
      #       docker login -u {{secrets.DOCKER_USERNAME}} -p {{sercrets.DOCKER_PASSWORD}}
      #       docker pull ${{secrets:DOCKER_ID}}/${{secrets.DOCKER_IMAGE_NAME}}:{{env.IMAGE_TAG}}
      #       docker stop frontend
      #       docker rm frontend
      #       docker run -d -p 8080:80 --name frontend ${{secrets:DOCKER_ID}}/${{secrets.DOCKER_IMAGE_NAME}}:{{env.IMAGE_TAG}}
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v0.1.3
        env:
          DOCKER_ID: ${{ secrets.DOCKER_ID }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
          DOCKER_COMPOSE_PATH: "/root/deploy/frontend/docker-compose.yml"

        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: DOCKER_ID,DOCKER_IMAGE_NAME,IMAGE_TAG,DOCKER_COMPOSE_PATH
          cript_stop: true
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker compose -f $DOCKER_COMPOSE_PATH down -v
            docker compose -f $DOCKER_COMPOSE_PATH --env-file $CONFIG_FILE up -d
        #     docker rm frontend
        #     docker run -d -p 8080:80 --name frontend ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        #     docker stop frontend
